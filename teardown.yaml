---

- hosts: kvm_host
  become: true
  gather_facts: no
  vars_prompt:
    - name: teardown_hostname
      prompt: What is the hostname of the VM you would like to teardown?
      private: no
  tasks:
    - name: Print prompt responses
      ansible.builtin.debug:
        msg: 'Tearing down {{ teardown_hostname }}'

    - name: Destroy running app nodes. Expect ignored errors if VM is already destroyed.
      community.libvirt.virt:
        name: "{{ teardown_hostname }}"
        command: destroy
      ignore_errors: yes

    - name: Undefine remaining app nodes. Expect ignored errors if VM is already undefined.
      community.libvirt.virt:
        name: "{{ teardown_hostname }}"
        command: undefine
      ignore_errors: yes

    - name: Remove snapshots for idempotency
      tags: create_extra_rhel
      file:
        path: /var/lib/libvirt/images/{{ teardown_hostname }}.qcow2
        state: absent

    - name: Remove seeds for idempotency
      tags: create_extra_rhel
      file:
        path: /var/lib/libvirt/images/{{ teardown_hostname }}-seed.img
        state: absent

    - name: Remove app meta data for idempotency
      tags: create_extra_rhel
      file:
        path: /var/lib/libvirt/images/tmp/{{ teardown_hostname }}/meta-data
        state: absent

    - name: Remove app user data for idempotency
      tags: create_extra_rhel
      file:
        path: /var/lib/libvirt/images/tmp/{{ teardown_hostname }}/user-data
        state: absent

    - name: Remove app network config data for idempotency
      tags: create_extra_rhel
      file:
        path: /var/lib/libvirt/images/tmp/{{ teardown_hostname }}/network-config
        state: absent

- hosts: localhost
  connection: local
  become: false
  gather_facts: no
  vars_prompt:
  - name: teardown_ip
    prompt: What is that same VM's IP address?
    private: no
  tasks:
    - name: remove vm from localhost's known_hosts file
      lineinfile:
        path: "~/.ssh/known_hosts"
        regexp: "{{ teardown_ip }}"
        state: absent
    - name: remove KVM host from localhost's known_hosts file
      lineinfile:
        path: "~/.ssh/known_hosts"
        regexp: "{{ teardown_ip }}"
        state: absent